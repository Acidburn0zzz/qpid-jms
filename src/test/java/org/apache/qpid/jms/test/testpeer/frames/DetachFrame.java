/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *
 */

package org.apache.qpid.jms.test.testpeer.frames;

import org.apache.qpid.jms.test.testpeer.Frame;
import org.apache.qpid.proton.amqp.Symbol;

/**
 * Generated by generate-frames.xsl, which resides in this package.
 */
public class DetachFrame extends Frame
{
    private static final Symbol DESCRIPTOR = Symbol.valueOf("amqp:detach:list");

    private static final int FIELD_HANDLE = 0;
    private static final int FIELD_CLOSED = 1;
    private static final int FIELD_ERROR = 2;

    public DetachFrame(Object... fields)
    {
        super(3);
        int i = 0;
        for(Object field : fields)
        {
            getFields()[i++] = field;
        }
    }

    @Override
    public Symbol getDescriptor()
    {
        return DESCRIPTOR;
    }

    public DetachFrame setHandle(Object o)
    {
        getFields()[FIELD_HANDLE] = o;
        return this;
    }

    public DetachFrame setClosed(Object o)
    {
        getFields()[FIELD_CLOSED] = o;
        return this;
    }

    public DetachFrame setError(Object o)
    {
        getFields()[FIELD_ERROR] = o;
        return this;
    }

}

